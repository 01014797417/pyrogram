{notice}

from io import BytesIO

from pyrogram.api.core.primitives import *
from pyrogram.api.core import TLObject
from pyrogram.api import types
from typing import List


class {combinator_name}(TLObject):
    __slots__ = [{slots}]

    ID = {combinator_id}
    QUALNAME = "{qualname}"

    def __init__(self{arguments}):
        {fields}

    @staticmethod
    def read(b: BytesIO, *args) -> "{combinator_name}":
        {read_types}
        return {combinator_name}({return_arguments})

    def write(self) -> bytes:
        b = BytesIO()
        b.write(Int(self.ID, False))

        {write_types}
        return b.getvalue()
